[loggers]
keys=root, timedrotating

[handlers]
keys=stdouthandler, timedrotating

[formatters]
keys=stdout, file


[logger_root]
level=DEBUG
handlers=stdouthandler

[logger_timedrotating]
level=DEBUG
handlers=timedrotating
propagate=0
qualname=timedrotating


[handler_stdouthandler]
class=StreamHandler
level=DEBUG
formatter=stdout
args=(sys.stdout, )

[handler_timedrotating]
class=logging.handlers.TimedRotatingFileHandler
level=DEBUG
formatter=file
args=("log/install.log", "m", 5, 5)


[formatter_stdout]
format="%(filename)s => %(funcName)s (line=%(lineno)d):\t%(message)s"

[formatter_file]
format="%(asctime)s [%(levelname)10s]    %(pathname)s [%(lineno)d] => %(funcName)s():    %(message)s"



# USAGE
# ========================================================
# Imports 
# --------------------------------------------------------
# import logging
# import logging.config
# import logging.handlers # Depending on hendler

# Create config (.conf) file and creat logging object
# --------------------------------------------------------
# logging.config.fileConfig("logging.conf")
# self.logger = logging.getLogger("mainapptimedrotating")

# Close log handlers before terminating script/app
# --------------------------------------------------------
# for handler in self.logger.handlers:
#   handler.close()
# ========================================================
